port: 9989
postgres:
  host: localhost
  port: 5432
  user: monokit
  password: monokit
  dbname: monokit
keycloak:
  enabled: true 
  url: "https://keycloak.example.com/auth"
  realm: "monokit"
  clientId: "monokit-api"
  clientSecret: "your-client-secret" 
  disableLocalAuth: false

awx:
  enabled: true
  url: "https://test.com"  # Base URL without /api/v2, the code will add it if needed
  username: "admin"
  password: "password123" 
  verify_ssl: false
  timeout: 30
  # *** CRITICAL CONFIGURATION REQUIRED ***
  # The default_inventory_id is ABSOLUTELY REQUIRED for ANY AWX operations to work.
  # Without this, all AWX functionality (creating hosts, running jobs) will fail.
  # 
  # You MUST set this to a valid inventory ID from your AWX instance.
  # To find your inventory ID:
  # 1. Log in to AWX/Ansible Tower web interface
  # 2. Go to Inventories
  # 3. Select your inventory
  # 4. The ID is in the URL: /inventories/inventory/{id}/
  #    Example: if your URL is https://awx.example.com/#/inventories/inventory/3/
  #             then your inventory ID is 3
  #
  # NOTE: The AWX API requires this value - it CANNOT be 0 or empty!
  default_inventory_id: 2  # CHANGE THIS to your actual AWX inventory ID
  
  host_id_map:
    # Add any static host mappings here if needed
    # Format is "hostname": "awx_host_id"

valkey:
  enabled: true
  address: "localhost:6379"
  password: ""  # Leave empty if no password
  database: 0
  pool_size: 10
  min_idle_conns: 2
  max_idle_conns: 5
  max_conn_age: 3600     # 1 hour in seconds
  idle_timeout: 300      # 5 minutes in seconds
  conn_timeout: 10       # 10 seconds
  read_timeout: 5        # 5 seconds
  write_timeout: 5       # 5 seconds
  default_ttl: 3600      # 1 hour in seconds
  session_ttl: 86400     # 24 hours in seconds
  health_ttl: 300        # 5 minutes in seconds
  host_ttl: 1800         # 30 minutes in seconds
  key_prefix: "monokit:"

cloudflare:
  enabled: false
  # Global API token for server-level operations (optional)
  # If not provided, each domain must have its own API token
  api_token: ""
  # Legacy API key authentication (optional, use api_token instead)
  api_key: ""
  email: ""
  # Request timeout in seconds
  timeout: 30
  # Whether to verify SSL certificates
  verify_ssl: true

redmine:
  enabled: false
  # Redmine server URL (without trailing slash)
  url: "https://redmine.example.com"
  # Redmine API key for authentication
  api_key: "your-redmine-api-key"
  # Request timeout in seconds
  timeout: 30
  # Whether to verify SSL certificates
  verify_ssl: true
